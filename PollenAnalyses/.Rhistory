library(ggplot2)
data <- read.csv("Data/measurements.csv")
data <- read.csv("Data/measurements.csv")
View(data)
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot()
data <- read.csv("Data/measurements.csv")
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot()
data <- read.csv("Data/measurements.csv")
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot()
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 16, hjust = 1, vjust = 0.5)
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 16, hjust = 1, vjust = 0.5))
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 16, hjust = 1, vjust = 0.5))
ggplot(data, aes(x = species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
ggplot(data, aes(x = reorder(species), -species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
ggplot(data, aes(reorder(species), -species, y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
ggplot(data, aes(reorder(species), y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
ggplot(data, aes(reorder(species, - X.2), y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
summary <- data %>% group_by(species) -> summarise(mean = mean(X.2))
library(dplyr)
summary <- data %>% group_by(species) -> summarise(mean = mean(X.2))
ggplot(data, aes(reorder(species, - X.2), y = X.2)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 90, size = 12, hjust = 1, vjust = 0.5))
summary <- data %>% group_by(species) -> summarise(mean = mean(X.2))
View(data)
summary <- data %>% group_by(species) -> summarise(mean = mean(X.2))
View(data)
summary(data)
summary <- data %>% group_by(species) %>% summarise(mean = mean(X.2))
View(summary)
summary <- mutate(summary, se = mean/sd(sqrt(n)))
summary <- mutate(summary, se = mean/sd(sqrt(320)))
View(summary)
summary <- mutate(summary, se = mean/(sd(sqrt(320))))
View(summary)
summary <- data %>% group_by(species) %>% summarise(mean = mean(X.2), sd = sd(X.2))
summary <- mutate(summary, se = sd/(sqrt(320))
View(summary)
View(summary)
summary <- mutate(summary, se = sd/(sqrt(320))
summary <- mutate(summary, se = sd/(sqrt(320)))
summary <- mutate(summary, se = sd/sqrt(320))
View(summary)
library(ads)
library(ggplot2)
library(dplyr)
library(sp)
library(rgdal)
library(raster)
library(maptools)
library(spatstat)
library(spdep)
library(stringr)
t6.sp <- readOGR("Output/T6_J.shp")
t5.sp <- readOGR("Output/T5_J.shp")
t4.sp <- readOGR("Output/T4_J.shp")
library(ggplot)
library(dplyr)
counts <- read.csv("Data/Pollen_Corrected.csv")
View(counts)
counts <- mutate(counts, all.con = sum(Malacotrix.grains:X:12)
counts <- mutate(counts, all.con = sum(Malacotrix.grains:X:12))
counts <- mutate(counts, all.con = sum(Malacotrix.grains:X:12))
counts <- mutate(counts, all.con = sum(Malacothrix.grains:X:12))
counts <- mutate(counts, all.con = rowSums(Malacothrix.grains:X.12))
counts <- mutate(counts, all.con = rowSums([Malacothrix.grains:X.12]5:18))
counts <- mutate(counts, all.con = rowSums([5:18])
counts <- mutate(counts, all.con = rowSums([5:18]))
counts <- mutate(counts, all.con = rowSums(.[5:18]))
counts %>% replace(is.na(.), 0)
counts <- counts %>% replace(is.na(.), 0)
View(counts)
counts <- counts %>% mutate(all.con = rowSums(.[5:18]))
str(counts)
counts$X <- as.numeric(as.character(counts$X))
View(counts)
counts <- counts %>% replace(is.na(.), 0)
counts <- counts %>% mutate(all.con = rowSums(.[5:18]))
counts <- select(counts, Rep:Het.Grains, all.com)
counts <- select(counts, Rep:Het.Grains, all.con)
counts.ag <- counts %>% group_by(slide) %>% summarise(Het = sum(Het.Grains, Con = sum(all.con)))
counts.ag <- counts %>% group_by(Slide) %>% summarise(Het = sum(Het.Grains, Con = sum(all.con)))
View(counts.ag)
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise(Het = sum(Het.Grains, Con = sum(all.con)))
View(counts.ag)
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise(Het = sum(Het.Grains), Con = sum(all.con)))
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise(Het = sum(Het.Grains), Con = sum(all.con)))
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise(Het = sum(Het.Grains) Con = sum(all.con)))
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise_at(Het = sum(Het.Grains), Con = sum(all.con)))
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise_at(Het = sum(Het.Grains), Con = sum(all.con))
View(counts)
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise_all(Het = sum(Het.Grains), Con = sum(all.con))
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise_all(., Het = sum(Het.Grains), Con = sum(all.con))
library(ggplot)
library(dplyr)
counts <- read.csv("Data/Pollen_Corrected.csv")
counts$X <- as.numeric(as.character(counts$X))
counts <- counts %>% replace(is.na(.), 0)
counts <- counts %>% mutate(all.con = rowSums(.[5:18]))
counts <- select(counts, Rep:Het.Grains, all.con)
counts.ag <- counts %>% group_by(Rep, Slide) %>% summarise(Het = sum(Het.Grains), Con = sum(all.con))
View(counts.ag)
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(Rep[1] == "S", "shrub", "open"))
View(counts.ag)
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(Rep[,1] == "S", "shrub", "open"))
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(substr(Rep) == "S", "shrub", "open"))
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(substr(Rep,s tart = 1) == "S", "shrub", "open"))
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(substr(Rep,start = 1) == "S", "shrub", "open"))
counts.ag <- counts.ag %>% mutate(., microsite = ifelse(substr(Rep,start = 1, stop = 1) == "S", "shrub", "open"))
ggplot(counts.ag(aes(Con, Microsite))) + boxplot()
library(ggplot)
library(ggplot2)
ggplot(counts.ag(aes(Con, Microsite))) + boxplot()
ggplot(counts.ag,(aes(Con, Microsite))) + boxplot()
ggplot(data =counts.ag,(aes(Microsite, Con))) + boxplot()
ggplot(data =counts.ag,(aes(Microsite, Con))) + geom_boxplot()
ggplot(data =counts.ag,(aes(microsite, Con))) + geom_boxplot()
shapiro.test(counts.ag$Con)
ggplot(data =counts.ag,(aes(microsite, Het))) + geom_boxplot()
t.test(counts.ag$Con ~ counts.ag$microsite)
